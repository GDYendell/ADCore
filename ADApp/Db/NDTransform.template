#=================================================================#
# Template file: NDTransform.template
# Database for NDTransform driver, which transforms NDArray data

# Macros:
# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name
# % macro, TIMEOUT, Timeout
# % macro, ADDR, Asyn Port address

# This associates the template with an edm screen
# % gui, $(PORT), edmtab, NDTransform.edl, P=$(P),R=$(R)

# This associates a BOY screen with the template
# % gui, $(PORT), boydetail,ADApp_opi/transform_detail.opi, P=$(P), R=$(R), DESC=Transform
# % gui, $(PORT), boyembed, ADApp_opi/transform_embed_box.opi, P=$(P), R=$(R), DESC=Transform
# % gui, $(PORT), boyembed, ADApp_opi/transform_embed.opi, P=$(P), R=$(R), DESC=Transform

# Info
# % gui, $(PORT), readback, Port name,   $(P)$(R)PortName_RBV
# % gui, $(PORT), readback, Plugin type,   $(P)$(R)PluginType_RBV
# Input
# % gui, $(PORT), demand, Input,   $(P)$(R)NDArrayPort
# % gui, $(PORT), readback, Input,   $(P)$(R)NDArrayPort_RBV
# % gui, $(PORT), enum, Callbacks,   $(P)$(R)EnableCallbacks
# % gui, $(PORT), readback, Callbacks,   $(P)$(R)EnableCallbacks_RBV
# % gui, $(PORT), demand, Min Time,   $(P)$(R)MinCallbackTime
# % gui, $(PORT), readback, Min Time,   $(P)$(R)MinCallbackTime_RBV
# % gui, $(PORT), enum, Blocking,   $(P)$(R)BlockingCallbacks
# % gui, $(PORT), readback, Blocking,   $(P)$(R)BlockingCallbacks_RBV
# % gui, $(PORT), demand, Array counter,   $(P)$(R)ArrayCounter
# % gui, $(PORT), readback, Array counter,   $(P)$(R)ArrayCounter_RBV
# % gui, $(PORT), readback, Array rate,   $(P)$(R)ArrayRate_RBV
# % gui, $(PORT), readback, Queue use,   $(P)$(R)QueueUse
# % gui, $(PORT), readback, Queue size,   $(P)$(R)QueueSize
# % gui, $(PORT), demand, Dropped,   $(P)$(R)DroppedArrays
# % gui, $(PORT), readback, Dropped,   $(P)$(R)DroppedArrays_RBV
# % gui, $(PORT), readback, Num Dimensions,   $(P)$(R)NDimensions_RBV
# % gui, $(PORT), readback, Dim 0 size,   $(P)$(R)ArraySize0_RBV
# % gui, $(PORT), readback, Dim 1 size,   $(P)$(R)ArraySize1_RBV
# % gui, $(PORT), readback, Dim 2 size,   $(P)$(R)ArraySize2_RBV
# % gui, $(PORT), readback, In data type,   $(P)$(R)DataType_RBV
# % gui, $(PORT), readback, Colour mode,   $(P)$(R)ColorMode_RBV
# % gui, $(PORT), readback, Bayer pattern,   $(P)$(R)BayerPattern_RBV
# % gui, $(PORT), readback, Unique id,   $(P)$(R)UniqueId_RBV
# % gui, $(PORT), readback, Timestamp,   $(P)$(R)TimeStamp_RBV
# Output
# % gui, $(PORT), demand, Attributes file,   $(P)$(R)NDAttributesFile
# Transform
# % gui, $(PORT), enum, Type,   $(P)$(R)Type
# Memory
# % gui, $(PORT), readback, Max memory,   $(P)$(R)PoolMaxMem
# % gui, $(PORT), readback, Max buffers,   $(P)$(R)PoolMaxBuffers
# % gui, $(PORT), readback, Used memory,   $(P)$(R)PoolUsedMem
# % gui, $(PORT), readback, Allocated buffers,   $(P)$(R)PoolAllocBuffers
# % gui, $(PORT), readback, Free buffers,   $(P)$(R)PoolFreeBuffers

include "NDPluginBase.template"

record(mbbo, "$(P)$(R)Type")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRANSFORM_TYPE")
   field(ZRST, "None")
   field(ZRVL, "0")
   field(ONST, "Rot90")
   field(ONVL, "1")
   field(TWST, "Rot180")
   field(TWVL, "2")
   field(THST, "Rot270")
   field(THVL, "3")
   field(FRST, "Mirror")
   field(FRVL, "4")
   field(FVST, "Rot90Mirror")
   field(FVVL, "5")
   field(SXST, "Rot180Mirror")
   field(SXVL, "6")
   field(SVST, "Rot270Mirror")
   field(SVVL, "7")
   info(autosaveFields, "VAL")
}
